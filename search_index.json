[
["notes-1.html", "Chapter 8 Notes 8.1 APY 8.2 LD score regression 8.3 Matrix inversion wiki", " Chapter 8 Notes 8.1 APY Citation: Misztal, I, 2016, Inexpensive computation of the inverse of the genomic relationship matrix in populations with small effective population size, \\(Genetics\\), 202:401-409 \\(G^{-1}= \\left[ \\begin{matrix} I&amp; -P_{cn}\\\\ 0&amp;I \\end{matrix} \\right] \\left[ \\begin{matrix} G_{cc}^{-1}&amp; 0\\\\ 0&amp;M_{nn}^{-1} \\end{matrix} \\right] \\left[ \\begin{matrix} I&amp; 0\\\\ -P_{nc}&amp;I \\end{matrix} \\right] = \\left[ \\begin{matrix}G_{cc}^{-1}&amp;-P_{cn}M_{nn}^{-1}\\\\ 0&amp;M^{-1}_{nn} \\end{matrix} \\right] \\left[ \\begin{matrix}I&amp;0\\\\ -P_{nc}&amp;I \\end{matrix} \\right]\\) in which \\(G\\) is the numerical relationship matrix, and \\(P_{cn}=G_{cc}^{-1}G_{cn}\\) and \\(P_{nc}=G_{cn}G_{cc}^{-1}\\). \\(G_{cc}\\), \\(G_{cn}\\), and \\(G_{nc}\\) are, “core” to “core”, “core” to “non-core”, and “non-core” to “core” relationship matrix. \\(M_{nn}=diag(G_{nn})-diag(P_{cn}^TG_{cn})\\) 8.1.1 A numerical example \\(G=\\left[ \\begin{matrix} 0.81 &amp; 0 &amp; 0 &amp; 0.80 &amp; -0.80\\\\ &amp;0.81 &amp; 0 &amp; 0.80 &amp;-0.80\\\\ &amp; &amp; 0.01&amp; 0 &amp; 0\\\\ &amp; &amp; &amp; 1.61 &amp; -1.60\\\\ symm. &amp; &amp; &amp; &amp; 1.61 \\end{matrix} \\right]\\) and \\(G_{cc}^{-1}=\\left[ \\begin{matrix} 1.235 &amp; 0\\\\ 0 &amp; 1.235 \\end{matrix} \\right]\\) \\(G_{cn}=G_{nc}^T=\\left [ \\begin{matrix} 0 &amp; 0.80 &amp; -0.80\\\\ 0 &amp; 0.80 &amp; -0.80 \\end{matrix} \\right]\\) and \\(P_{cn}=G_{cc}^{-1}G_{cn}=\\left [ \\begin{matrix} 0.00 &amp; 0.988 &amp; -0.988\\\\ 0.00 &amp; 0.988 &amp; -0.988 \\end{matrix} \\right ]\\) \\(M_{nn}=diag(G_{nn})-diag(P_{cn}^TG_{cn}) = \\left [ \\begin{matrix}0.01 &amp; &amp;\\\\ &amp; 1.61 &amp; \\\\ &amp; &amp; 1.61 \\end{matrix} \\right] - \\left [ \\begin{matrix}0.00 &amp; &amp;\\\\ &amp; 1.58 &amp; \\\\ &amp; &amp; 1.58 \\end{matrix} \\right]=\\left [ \\begin{matrix}0.01 &amp; &amp;\\\\ &amp; 0.03 &amp; \\\\ &amp; &amp; 0.03 \\end{matrix} \\right]\\) and \\(G^{-1}=\\left[ \\begin{matrix} 66.8 &amp; 65.5 &amp; 0 &amp; -33.1 &amp; 33.1\\\\ &amp;66.804 &amp; 0 &amp; -33.1 &amp; 33.1\\\\ &amp; &amp; 100&amp; 0 &amp; 0\\\\ &amp; &amp; &amp; 33.6 &amp; 0\\\\ symm. &amp; &amp; &amp; &amp; 33.6 \\end{matrix} \\right]\\) This is APY inversed \\(G\\), and for a comparison, a regular inverse of \\(G\\) is quit different \\(G^{-1}_{reg}=\\left[ \\begin{matrix} 40.6 &amp; 39.4 &amp; 0 &amp; -19.9 &amp; 19.9\\\\ &amp;40.6 &amp; 0 &amp; -19.9 &amp; 19.9\\\\ &amp; &amp; 100&amp; 0 &amp; 0\\\\ &amp; &amp; &amp; 60.0 &amp; 39.9\\\\ symm. &amp; &amp; &amp; &amp; 60.0 \\end{matrix} \\right]\\) 8.2 LD score regression source(&quot;~/R/MyLib/shotgun.R&quot;) REP = 50 N = 500 M = 1000 h2 = 0.5 h2E = array(0, dim = c(2, REP)) for (rep in 1:REP) { fq = runif(M, 0.05, 0.95) Dl = array(0, dim = M) Dl = runif(M, 0.8, 0.9) Dl[seq(10, M, 10)] = 0 G = GenerateGenoDprime(fq, Dl[1:(length(Dl) - 1)], N) b = rnorm(M, 0, sqrt(h2/M)) bv = G %*% b Y = bv + rnorm(N, 0, 1) chi = array(0, dim = M) for (i in 1:M) { sm = summary(lm(Y ~ G[, i])) chi[i] = sm$coefficients[2, 3]^2 } plot(chi, b^2 * fq * (1 - fq), pch = 16) lds = array(0, dim = M) for (i in 1:(M/10)) { cg = cor(G[, ((i - 1) * 10 + 1):(i * 10)]) for (j in 1:10) { lds[(i - 1) * 10 + j] = sum(cg[, j]^2) } } ldSc = lm(chi ~ lds) h2E[1, rep] = ldSc$coefficients[2] * M/N h2E[2, rep] = var(bv)/var(Y) } plot(h2E[1, ], h2E[2, ]) 8.3 Matrix inversion wiki 8.3.1 2 X 2 The cofactor equation listed above yields the following result for 2 ?? 2 matrices. Inversion of these matrices can be done as follows \\[\\text{A}^{-1}=\\left[ \\begin{matrix} a &amp; b\\\\ c &amp; d \\end{matrix} \\right] ^{-1} =\\frac{1}{det (\\text{A})}\\left[ \\begin{matrix} A &amp; B\\\\ C &amp; D \\end{matrix} \\right] =\\frac{1}{ad-bc}\\left[ \\begin{matrix} d &amp; -b\\\\ -c &amp; a \\end{matrix} \\right] \\] Where the scalar \\(A\\) is not to be confused with the matrix A. 8.3.2 3 X 3 \\[\\text{A}^{-1}=\\left[ \\begin{matrix} a &amp; b &amp; c\\\\ d &amp; e &amp; f\\\\ g &amp; h &amp; i \\end{matrix} \\right] ^{-1} =\\frac{1}{det (\\text{A})}\\left[ \\begin{matrix} A &amp; B &amp; C\\\\ D &amp; E &amp; F\\\\ G &amp; H &amp; I \\end{matrix} \\right] ^{T} =\\frac{1}{det (\\text{A})}\\left[ \\begin{matrix} A &amp; D &amp; G\\\\ B &amp; E &amp; H\\\\ C &amp; F &amp; I \\end{matrix} \\right] \\] in which \\[\\begin{matrix} A=(ei-fh), &amp; D=-(bi-ch), &amp; G = -(bf-ce), \\\\ B=-(di-fg), &amp; E=(ai-cg), &amp; H = -(af-cd), \\\\ C=(dh-eg), &amp; F=-(ah-bg), &amp; I = (ae-bd). \\end{matrix} \\] "]
]
